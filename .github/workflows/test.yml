name: Test

on: [push, pull_request]
env:
  CARGO_TERM_COLOR: always
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        toolchain: [stable, beta, nightly]

    runs-on: ${{ matrix.os }}
    env:
      RUSTFLAGS: -D warnings

    steps:
    - if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install libasound2-dev
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        override: true
    - name: Build
      run: cargo build --all --all-features --verbose
    - name: Check Plugin-only Extensions
      run: cargo check -p clack-extensions -F "clack-extensions/all-extensions" -F "clack-extensions/clack-plugin" --no-default-features
    - name: Check Host-only Extensions
      run: cargo check -p clack-extensions -F "clack-extensions/all-extensions" -F "clack-extensions/clack-host" --no-default-features
    - name: Check Standalone Extensions
      run: cargo check -p clack-extensions -F "clack-extensions/all-extensions" --no-default-features
    - name: Run tests
      run: cargo test --all --verbose

  clippy:
    runs-on: ubuntu-latest

    steps:
    - run: sudo apt-get install libasound2-dev
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Format
      run: cargo fmt --all -- --check
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all --all-features -- -D warnings
  miri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: miri
      - uses: actions-rs/cargo@v1
        with:
          command: miri
          args: setup
      - uses: actions-rs/cargo@v1
        with:
          command: miri
          args: test --all --all-features --verbose --exclude clack-host-cpal
  rustdoc:
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: -D warnings
    steps:
      - run: sudo apt-get install libasound2-dev
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features --no-deps
